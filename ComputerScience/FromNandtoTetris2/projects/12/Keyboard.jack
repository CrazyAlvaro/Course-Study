// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return ;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newLine()
     * backspace = 129 = String.backSpace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var char c;
        let c = Memory.peek(24576);
        return c;
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
        var char c, up;
        let c = Keyboard.keyPressed();

        while (c = 0) {
            let c = Keyboard.keyPressed();
        }
        let up = c;
        while (~(up = 0)) {
            let up = Keyboard.keyPressed();
        }

        // gracefully handle input character
        if (c = String.newLine()) {
            do Output.println();
        }
        else {
            if (c = String.backSpace()) {
                do Output.backSpace();
            }
            else {
                do Output.printChar(c);
            }
        }

        return c;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str;
        var char c;
        var boolean running;

        let str = String.new(50);
        let running = true;

        do Output.printString(message);

        while (running) {
            let c = Keyboard.readChar();

            if (c = String.newLine()) {
                let running = false;
            }
            else {
                if (c = String.backSpace()) {
                    do str.eraseLastChar();
                }
                else {
                    let str = str.appendChar(c);
                }
            }
        }

        return str;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
        var char c;
        var String str;
        var boolean running;
        let str = String.new(50);

        let running = true;

        do Output.printString(message);

        while (running) {
            let c = Keyboard.readChar();

            if (c = String.newLine()) {
                // let num = str.intValue();
                let running = false;
            }
            else {
                if (c = String.backSpace()) {
                    do str.eraseLastChar();
                }
                else {
                    let str = str.appendChar(c);
                }
            }

        }

        return str.intValue();
    }
}
